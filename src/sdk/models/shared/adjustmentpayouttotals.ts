/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CurrencyCodeChargeback, CurrencyCodeChargeback$ } from "./currencycodechargeback";
import { CurrencyCodePayouts, CurrencyCodePayouts$ } from "./currencycodepayouts";
import { z } from "zod";

/**
 * Chargeback fee before conversion to the payout currency. `null` when the chargeback fee is the same as the payout currency.
 */
export type Original = {
    /**
     * Fee amount for this chargeback in the original currency.
     */
    amount?: string | undefined;
    /**
     * Three-letter ISO 4217 currency code for chargeback fees.
     */
    currencyCode?: CurrencyCodeChargeback | undefined;
};

/**
 * Chargeback fees incurred for this adjustment. Only returned when the adjustment `action` is `chargeback` or `chargeback_warning`.
 */
export type ChargebackFee = {
    /**
     * Chargeback fee converted into the payout currency.
     */
    amount?: string | undefined;
    /**
     * Chargeback fee before conversion to the payout currency. `null` when the chargeback fee is the same as the payout currency.
     */
    original?: Original | null | undefined;
};

/**
 * Breakdown of how this adjustment affects your payout balance.
 */
export type AdjustmentPayoutTotals = {
    /**
     * Chargeback fees incurred for this adjustment. Only returned when the adjustment `action` is `chargeback` or `chargeback_warning`.
     */
    chargebackFee?: ChargebackFee | undefined;
    /**
     * Supported three-letter ISO 4217 currency code for payouts from Paddle.
     */
    currencyCode?: CurrencyCodePayouts | undefined;
    /**
     * Adjusted payout earnings. This is the adjustment total plus adjusted Paddle fees, minus chargeback fees.
     */
    earnings?: string | undefined;
    /**
     * Adjusted Paddle fee.
     */
    fee?: string | undefined;
    /**
     * Adjustment total before tax and fees.
     */
    subtotal?: string | undefined;
    /**
     * Total tax on the adjustment subtotal.
     */
    tax?: string | undefined;
    /**
     * Adjustment total after tax.
     */
    total?: string | undefined;
};

/** @internal */
export namespace Original$ {
    export type Inbound = {
        amount?: string | undefined;
        currency_code?: CurrencyCodeChargeback | undefined;
    };

    export const inboundSchema: z.ZodType<Original, z.ZodTypeDef, Inbound> = z
        .object({
            amount: z.string().optional(),
            currency_code: CurrencyCodeChargeback$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.amount === undefined ? null : { amount: v.amount }),
                ...(v.currency_code === undefined ? null : { currencyCode: v.currency_code }),
            };
        });

    export type Outbound = {
        amount?: string | undefined;
        currency_code?: CurrencyCodeChargeback | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Original> = z
        .object({
            amount: z.string().optional(),
            currencyCode: CurrencyCodeChargeback$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.amount === undefined ? null : { amount: v.amount }),
                ...(v.currencyCode === undefined ? null : { currency_code: v.currencyCode }),
            };
        });
}

/** @internal */
export namespace ChargebackFee$ {
    export type Inbound = {
        amount?: string | undefined;
        original?: Original$.Inbound | null | undefined;
    };

    export const inboundSchema: z.ZodType<ChargebackFee, z.ZodTypeDef, Inbound> = z
        .object({
            amount: z.string().optional(),
            original: z.nullable(z.lazy(() => Original$.inboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.amount === undefined ? null : { amount: v.amount }),
                ...(v.original === undefined ? null : { original: v.original }),
            };
        });

    export type Outbound = {
        amount?: string | undefined;
        original?: Original$.Outbound | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ChargebackFee> = z
        .object({
            amount: z.string().optional(),
            original: z.nullable(z.lazy(() => Original$.outboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.amount === undefined ? null : { amount: v.amount }),
                ...(v.original === undefined ? null : { original: v.original }),
            };
        });
}

/** @internal */
export namespace AdjustmentPayoutTotals$ {
    export type Inbound = {
        chargeback_fee?: ChargebackFee$.Inbound | undefined;
        currency_code?: CurrencyCodePayouts | undefined;
        earnings?: string | undefined;
        fee?: string | undefined;
        subtotal?: string | undefined;
        tax?: string | undefined;
        total?: string | undefined;
    };

    export const inboundSchema: z.ZodType<AdjustmentPayoutTotals, z.ZodTypeDef, Inbound> = z
        .object({
            chargeback_fee: z.lazy(() => ChargebackFee$.inboundSchema).optional(),
            currency_code: CurrencyCodePayouts$.optional(),
            earnings: z.string().optional(),
            fee: z.string().optional(),
            subtotal: z.string().optional(),
            tax: z.string().optional(),
            total: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.chargeback_fee === undefined ? null : { chargebackFee: v.chargeback_fee }),
                ...(v.currency_code === undefined ? null : { currencyCode: v.currency_code }),
                ...(v.earnings === undefined ? null : { earnings: v.earnings }),
                ...(v.fee === undefined ? null : { fee: v.fee }),
                ...(v.subtotal === undefined ? null : { subtotal: v.subtotal }),
                ...(v.tax === undefined ? null : { tax: v.tax }),
                ...(v.total === undefined ? null : { total: v.total }),
            };
        });

    export type Outbound = {
        chargeback_fee?: ChargebackFee$.Outbound | undefined;
        currency_code?: CurrencyCodePayouts | undefined;
        earnings?: string | undefined;
        fee?: string | undefined;
        subtotal?: string | undefined;
        tax?: string | undefined;
        total?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AdjustmentPayoutTotals> = z
        .object({
            chargebackFee: z.lazy(() => ChargebackFee$.outboundSchema).optional(),
            currencyCode: CurrencyCodePayouts$.optional(),
            earnings: z.string().optional(),
            fee: z.string().optional(),
            subtotal: z.string().optional(),
            tax: z.string().optional(),
            total: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.chargebackFee === undefined ? null : { chargeback_fee: v.chargebackFee }),
                ...(v.currencyCode === undefined ? null : { currency_code: v.currencyCode }),
                ...(v.earnings === undefined ? null : { earnings: v.earnings }),
                ...(v.fee === undefined ? null : { fee: v.fee }),
                ...(v.subtotal === undefined ? null : { subtotal: v.subtotal }),
                ...(v.tax === undefined ? null : { tax: v.tax }),
                ...(v.total === undefined ? null : { total: v.total }),
            };
        });
}
