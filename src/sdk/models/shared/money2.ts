/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CurrencyCode2, CurrencyCode2$ } from "./currencycode2";
import { z } from "zod";

export type Money2 = {
    /**
     * Amount in the lowest denomination for the currency, e.g. 10 USD = 1000 (cents).
     */
    amount: string;
    /**
     * Supported three-letter ISO 4217 currency code.
     */
    currencyCode: CurrencyCode2;
};

/** @internal */
export namespace Money2$ {
    export type Inbound = {
        amount: string;
        currency_code: CurrencyCode2;
    };

    export const inboundSchema: z.ZodType<Money2, z.ZodTypeDef, Inbound> = z
        .object({
            amount: z.string(),
            currency_code: CurrencyCode2$,
        })
        .transform((v) => {
            return {
                amount: v.amount,
                currencyCode: v.currency_code,
            };
        });

    export type Outbound = {
        amount: string;
        currency_code: CurrencyCode2;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Money2> = z
        .object({
            amount: z.string(),
            currencyCode: CurrencyCode2$,
        })
        .transform((v) => {
            return {
                amount: v.amount,
                currency_code: v.currencyCode,
            };
        });
}
