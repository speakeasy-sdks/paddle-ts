/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Period1, Period1$ } from "./period1";
import { z } from "zod";

/**
 * Details for invoicing. Required if `collection_mode` is set to `manual`. Otherwise must be `null`.
 */
export type BillingDetails1 = {
    /**
     * purchase order number, max 1500 chars
     */
    additionalInformation?: string | undefined;
    enableCheckout?: boolean | undefined;
    /**
     * Setting for the period of time between when the transaction is billed and when it is due. Mandatory when `collection_mode` is set to `manual`.
     */
    paymentTerms?: Period1 | undefined;
    /**
     * purchase order number, max 100 chars
     */
    purchaseOrderNumber?: string | undefined;
};

/** @internal */
export namespace BillingDetails1$ {
    export type Inbound = {
        additional_information?: string | undefined;
        enable_checkout?: boolean | undefined;
        payment_terms?: Period1$.Inbound | undefined;
        purchase_order_number?: string | undefined;
    };

    export const inboundSchema: z.ZodType<BillingDetails1, z.ZodTypeDef, Inbound> = z
        .object({
            additional_information: z.string().optional(),
            enable_checkout: z.boolean().default(false),
            payment_terms: Period1$.inboundSchema.optional(),
            purchase_order_number: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.additional_information === undefined
                    ? null
                    : { additionalInformation: v.additional_information }),
                ...(v.enable_checkout === undefined ? null : { enableCheckout: v.enable_checkout }),
                ...(v.payment_terms === undefined ? null : { paymentTerms: v.payment_terms }),
                ...(v.purchase_order_number === undefined
                    ? null
                    : { purchaseOrderNumber: v.purchase_order_number }),
            };
        });

    export type Outbound = {
        additional_information?: string | undefined;
        enable_checkout: boolean;
        payment_terms?: Period1$.Outbound | undefined;
        purchase_order_number?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BillingDetails1> = z
        .object({
            additionalInformation: z.string().optional(),
            enableCheckout: z.boolean().default(false),
            paymentTerms: Period1$.outboundSchema.optional(),
            purchaseOrderNumber: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.additionalInformation === undefined
                    ? null
                    : { additional_information: v.additionalInformation }),
                enable_checkout: v.enableCheckout,
                ...(v.paymentTerms === undefined ? null : { payment_terms: v.paymentTerms }),
                ...(v.purchaseOrderNumber === undefined
                    ? null
                    : { purchase_order_number: v.purchaseOrderNumber }),
            };
        });
}
