/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Kind of change that's scheduled to be applied to this subscription.
 */
export enum SubscriptionScheduledChangeAction {
    Cancel = "cancel",
    Pause = "pause",
    Resume = "resume",
}

/**
 * Change that's scheduled to be applied to a subscription. Use the pause subscription, cancel subscription, and resume subscription operations to create scheduled changes. `null` if no scheduled changes.
 */
export class SubscriptionScheduledChange extends SpeakeasyBase {
    /**
     * Kind of change that's scheduled to be applied to this subscription.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "action" })
    action?: SubscriptionScheduledChangeAction;

    /**
     * Timestamp following the RFC 3339 standard
     */
    @SpeakeasyMetadata()
    @Expose({ name: "effective_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    effectiveAt?: Date;

    /**
     * RFC 3339 datetime string.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "resume_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    resumeAt?: Date;
}
