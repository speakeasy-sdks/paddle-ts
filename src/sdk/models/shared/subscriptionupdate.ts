/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BillingDetails2 } from "./billingdetails2";
import { CollectionMode2 } from "./collectionmode2";
import { CurrencyCode2 } from "./currencycode2";
import { CustomData } from "./customdata";
import { EffectiveFrom } from "./effectivefrom";
import { SubscriptionUpdateProrationBillingMode } from "./subscriptionupdateprorationbillingmode";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Details of the discount applied to this subscription. Include to add a discount to a subscription. `null` to remove a discount.
 */
export class SubscriptionUpdateDiscount extends SpeakeasyBase {
    /**
     * When this scheduled change should take effect from. `immediately` is only allowed when canceling or resuming a paused subscription.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "effective_from" })
    effectiveFrom: EffectiveFrom;

    /**
     * Unique Paddle ID for this discount, prefixed with `dsc_`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;
}

/**
 * Represents a subscription entity.
 */
export class SubscriptionUpdate extends SpeakeasyBase {
    /**
     * Unique Paddle ID for this address entity, prefixed with `add_`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "address_id" })
    addressId?: string;

    /**
     * Details for invoicing. Required if `collection_mode` is `manual`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "billing_details" })
    @Type(() => BillingDetails2)
    billingDetails?: BillingDetails2;

    /**
     * Unique Paddle ID for this business entity, prefixed with `biz_`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "business_id" })
    businessId?: string;

    /**
     * How payment is collected. `automatic` for checkout, `manual` for invoices.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "collection_mode" })
    collectionMode?: CollectionMode2;

    /**
     * Supported three-letter ISO 4217 currency code.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "currency_code" })
    currencyCode?: CurrencyCode2;

    /**
     * Your own structured key-value data.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "custom_data" })
    @Type(() => CustomData)
    customData?: CustomData;

    /**
     * Unique Paddle ID for this customer entity, prefixed with `ctm_`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "customer_id" })
    customerId?: string;

    /**
     * Details of the discount applied to this subscription. Include to add a discount to a subscription. `null` to remove a discount.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "discount" })
    @Type(() => SubscriptionUpdateDiscount)
    discount?: SubscriptionUpdateDiscount;

    /**
     * List of items on this subscription. Only recurring items may be added. Send the complete list of items that should be on this subscription, including existing items to retain.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "items" })
    items?: Record<string, any>[];

    /**
     * RFC 3339 datetime string.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "next_billed_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    nextBilledAt?: Date;

    /**
     * How Paddle should handle proration calculation for changes made to a subscription or its items. Required when making changes that impact billing.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "proration_billing_mode" })
    prorationBillingMode?: SubscriptionUpdateProrationBillingMode;

    /**
     * Change that's scheduled to be applied to a subscription. When updating, you may only set to `null` to remove a scheduled change. Use the pause subscription, cancel subscription, and resume subscription operations to create scheduled changes.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "scheduled_change" })
    scheduledChange?: any;
}
