/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

/**
 * Public URLs that customers can use to make changes to this subscription.
 */
export type SubscriptionManagementUrls = {
    /**
     * Public URL that lets customers cancel this subscription.
     */
    cancel: string;
    /**
     * Public URL that lets customers update the payment method for this subscription.
     */
    updatePaymentMethod?: string | null | undefined;
};

/** @internal */
export namespace SubscriptionManagementUrls$ {
    export type Inbound = {
        cancel: string;
        update_payment_method?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<SubscriptionManagementUrls, z.ZodTypeDef, Inbound> = z
        .object({
            cancel: z.string(),
            update_payment_method: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                cancel: v.cancel,
                ...(v.update_payment_method === undefined
                    ? null
                    : { updatePaymentMethod: v.update_payment_method }),
            };
        });

    export type Outbound = {
        cancel: string;
        update_payment_method?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SubscriptionManagementUrls> = z
        .object({
            cancel: z.string(),
            updatePaymentMethod: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                cancel: v.cancel,
                ...(v.updatePaymentMethod === undefined
                    ? null
                    : { update_payment_method: v.updatePaymentMethod }),
            };
        });
}
