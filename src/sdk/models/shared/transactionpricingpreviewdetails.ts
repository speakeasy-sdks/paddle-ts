/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    TransactionPricingPreviewLineItem,
    TransactionPricingPreviewLineItem$,
} from "./transactionpricingpreviewlineitem";
import { z } from "zod";

/**
 * Calculated totals for a price preview, including discounts, tax, and currency conversion.
 */
export type TransactionPricingPreviewDetails = {
    lineItems?: Array<TransactionPricingPreviewLineItem> | undefined;
};

/** @internal */
export namespace TransactionPricingPreviewDetails$ {
    export type Inbound = {
        line_items?: Array<TransactionPricingPreviewLineItem$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<TransactionPricingPreviewDetails, z.ZodTypeDef, Inbound> =
        z
            .object({
                line_items: z.array(TransactionPricingPreviewLineItem$.inboundSchema).optional(),
            })
            .transform((v) => {
                return {
                    ...(v.line_items === undefined ? null : { lineItems: v.line_items }),
                };
            });

    export type Outbound = {
        line_items?: Array<TransactionPricingPreviewLineItem$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        TransactionPricingPreviewDetails
    > = z
        .object({
            lineItems: z.array(TransactionPricingPreviewLineItem$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.lineItems === undefined ? null : { line_items: v.lineItems }),
            };
        });
}
