/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CountryCode2, CountryCode2$ } from "./countrycode2";
import { Money2, Money2$ } from "./money2";
import { z } from "zod";

export type UnitPriceOverride = {
    /**
     * Supported two-letter ISO 3166-1 alpha-2 country code. Customers located in the listed countries are charged the override price.
     */
    countryCodes: Array<CountryCode2>;
    unitPrice: Money2;
};

/** @internal */
export namespace UnitPriceOverride$ {
    export type Inbound = {
        country_codes: Array<CountryCode2>;
        unit_price: Money2$.Inbound;
    };

    export const inboundSchema: z.ZodType<UnitPriceOverride, z.ZodTypeDef, Inbound> = z
        .object({
            country_codes: z.array(CountryCode2$),
            unit_price: Money2$.inboundSchema,
        })
        .transform((v) => {
            return {
                countryCodes: v.country_codes,
                unitPrice: v.unit_price,
            };
        });

    export type Outbound = {
        country_codes: Array<CountryCode2>;
        unit_price: Money2$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnitPriceOverride> = z
        .object({
            countryCodes: z.array(CountryCode2$),
            unitPrice: Money2$.outboundSchema,
        })
        .transform((v) => {
            return {
                country_codes: v.countryCodes,
                unit_price: v.unitPrice,
            };
        });
}
