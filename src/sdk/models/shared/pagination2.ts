/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Keys used for working with paginated results.
 */
export class Pagination2 extends SpeakeasyBase {
    /**
     * Estimated number of entities for this response.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "estimated_total" })
    estimatedTotal: number;

    /**
     * Whether this response has another page.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "has_more" })
    hasMore: boolean;

    /**
     * URL containing the query parameters of the original request, along with the `after` parameter that marks the starting point of the next page. Always returned, even if `has_more` is `false`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "next" })
    next: string;

    /**
     * Number of entities per page for this response. May differ from the number requested if the requested number is too high.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "per_page" })
    perPage: number;
}
