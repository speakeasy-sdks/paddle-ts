/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Event } from "./event";
import { SchemasstatusNotification } from "./schemasstatusnotification";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes how this notification was created.
 */
export enum NotificationOrigin {
    Event = "event",
    Replay = "replay",
}

/**
 * Represents a notification entity.
 */
export class Notification extends SpeakeasyBase {
    /**
     * RFC 3339 datetime string.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "delivered_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    deliveredAt?: Date;

    /**
     * Unique Paddle ID for this notification, prefixed with `ntf_`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * RFC 3339 datetime string.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "last_attempt_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    lastAttemptAt?: Date;

    /**
     * Unique Paddle ID for this notification setting, prefixed with `ntfset_`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "notification_setting_id" })
    notificationSettingId?: string;

    /**
     * RFC 3339 datetime string.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "occurred_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    occurredAt?: Date;

    /**
     * Describes how this notification was created.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "origin" })
    origin?: NotificationOrigin;

    /**
     * Represents an event entity.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "payload" })
    @Type(() => Event)
    payload?: Event;

    /**
     * RFC 3339 datetime string.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "replayed_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    replayedAt?: Date;

    /**
     * RFC 3339 datetime string.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "retry_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    retryAt?: Date;

    /**
     * Status of this notification.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: SchemasstatusNotification;

    /**
     * How many times delivery of this notification has been attempted. Automatically incremented by Paddle after an attempt.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "times_attempted" })
    timesAttempted?: number;

    /**
     * Type of event sent by Paddle, in the format `entity.event_type`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: string;
}
