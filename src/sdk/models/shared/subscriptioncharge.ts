/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EffectiveFrom } from "./effectivefrom";
import { Expose, Type } from "class-transformer";

export class SubscriptionChargeItems extends SpeakeasyBase {
    /**
     * Unique Paddle ID for this price, prefixed with `pri_`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "price_id" })
    priceId: string;

    /**
     * Quantity to charge for.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "quantity" })
    quantity: number;
}

export class SubscriptionCharge extends SpeakeasyBase {
    /**
     * When this scheduled change should take effect from. `immediately` is only allowed when canceling or resuming a paused subscription.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "effective_from" })
    effectiveFrom: EffectiveFrom;

    @SpeakeasyMetadata({ elemType: SubscriptionChargeItems })
    @Expose({ name: "items" })
    @Type(() => SubscriptionChargeItems)
    items: SubscriptionChargeItems[];
}
