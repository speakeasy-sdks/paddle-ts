/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Represents a notification destination.
 */
export class NotificationSettingUpdate extends SpeakeasyBase {
    /**
     * Whether Paddle should try to deliver events to this notification destination.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "active" })
    active?: boolean;

    /**
     * API version that returned objects for events should conform to. Must be a valid version of the Paddle API. Cannot be a version older than your account default. Defaults to your account default if not included.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "api_version" })
    apiVersion?: number;

    /**
     * Short description for this notification destination. Shown in the Paddle Dashboard.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     * Webhook endpoint URL or email address.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "destination" })
    destination?: string;

    /**
     * Whether potentially sensitive fields should be sent to this notification destination.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "include_sensitive_fields" })
    includeSensitiveFields?: boolean;

    /**
     * Subscribed events for this notification destination. When creating or updating a notification destination, pass an array of event type names only. Paddle returns the complete event type object.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "subscribed_events" })
    subscribedEvents?: string[];
}
