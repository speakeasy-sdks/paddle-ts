/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CountryCode2, CountryCode2$ } from "./countrycode2";
import { z } from "zod";

/**
 * Represents an address entity.
 */
export type AddressPreview = {
    /**
     * Supported two-letter ISO 3166-1 alpha-2 country code.
     */
    countryCode: CountryCode2;
    /**
     * ZIP or postal code of this address. Include for more accurate tax calculations.
     */
    postalCode?: string | null | undefined;
};

/** @internal */
export namespace AddressPreview$ {
    export type Inbound = {
        country_code: CountryCode2;
        postal_code?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<AddressPreview, z.ZodTypeDef, Inbound> = z
        .object({
            country_code: CountryCode2$,
            postal_code: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                countryCode: v.country_code,
                ...(v.postal_code === undefined ? null : { postalCode: v.postal_code }),
            };
        });

    export type Outbound = {
        country_code: CountryCode2;
        postal_code?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddressPreview> = z
        .object({
            countryCode: CountryCode2$,
            postalCode: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                country_code: v.countryCode,
                ...(v.postalCode === undefined ? null : { postal_code: v.postalCode }),
            };
        });
}
