/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TimePeriod } from "./timeperiod";
import { TransactionPreviewDetails } from "./transactionpreviewdetails";
import { Expose, Type } from "class-transformer";

/**
 * Preview of the next transaction for this subscription. May include prorated charges that are not yet billed and one-time charges. `null` if the subscription is scheduled to cancel or pause.
 */
export class SubscriptionNextTransaction extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "adjustments" })
    adjustments?: any[];

    @SpeakeasyMetadata()
    @Expose({ name: "billing_period" })
    @Type(() => TimePeriod)
    billingPeriod?: TimePeriod;

    /**
     * Calculated totals for a transaction preview, including discounts, tax, and currency conversion. Considered the source of truth for totals on a transaction preview.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "details" })
    @Type(() => TransactionPreviewDetails)
    details?: TransactionPreviewDetails;
}
